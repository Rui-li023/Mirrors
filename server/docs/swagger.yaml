basePath: /
definitions:
  clothing.AppRole:
    properties:
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      name:
        type: string
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
    type: object
  clothing.Banner:
    properties:
      content:
        type: string
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      mediaUrl:
        type: string
      sort:
        type: integer
      status:
        type: integer
      title:
        type: string
      type:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
      url:
        type: string
    type: object
  clothing.Cloth:
    properties:
      color:
        type: string
      companyID:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      length:
        type: number
      styleID:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
    type: object
  clothing.Company:
    properties:
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      name:
        type: string
      status:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
      userID:
        type: integer
    type: object
  clothing.CroppingRecord:
    properties:
      color:
        type: string
      companyID:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      length:
        type: number
      quantity:
        type: integer
      size:
        type: string
      step:
        type: integer
      styleID:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
      userID:
        type: integer
    type: object
  clothing.Job:
    properties:
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      croppingID:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      income:
        type: number
      jobType:
        type: integer
      price:
        type: number
      processName:
        type: string
      quantity:
        type: integer
      realIncome:
        type: number
      realQuantity:
        type: integer
      step:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
      userID:
        type: integer
    type: object
  clothing.JobQuestion:
    properties:
      content:
        type: string
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      jobID:
        type: integer
      status:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
      userID:
        type: integer
    type: object
  clothing.MsgBox:
    properties:
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      msgID:
        type: integer
      msgType:
        type: integer
      status:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
      userID:
        type: integer
    type: object
  clothing.Process:
    properties:
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      name:
        type: string
      percent:
        type: number
      price:
        type: number
      sort:
        type: integer
      styleID:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
    type: object
  clothing.Style:
    properties:
      companyID:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      name:
        type: string
      price:
        type: number
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
    type: object
  clothing.Team:
    properties:
      companyID:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      name:
        type: string
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
    type: object
  clothing.TeamApply:
    properties:
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      status:
        type: integer
      teamID:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
      userID:
        type: integer
    type: object
  clothing.TeamUser:
    properties:
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      teamID:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
      userID:
        type: integer
    type: object
  clothing.UserRole:
    properties:
      company:
        $ref: '#/definitions/clothing.Company'
      companyID:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      role:
        $ref: '#/definitions/clothing.AppRole'
      roleID:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
      userID:
        type: integer
    type: object
  clothing.UserWallet:
    properties:
      companyID:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      createdBy:
        type: integer
      deletedBy:
        type: integer
      id:
        description: 主键ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      updatedBy:
        type: integer
      userID:
        type: integer
      wages:
        type: number
    type: object
  config.AliyunOSS:
    properties:
      access-key-id:
        type: string
      access-key-secret:
        type: string
      base-path:
        type: string
      bucket-name:
        type: string
      bucket-url:
        type: string
      endpoint:
        type: string
    type: object
  config.Autocode:
    properties:
      root:
        type: string
      server:
        type: string
      server-api:
        type: string
      server-initialize:
        type: string
      server-model:
        type: string
      server-plug:
        type: string
      server-request:
        type: string
      server-router:
        type: string
      server-service:
        type: string
      transfer-restart:
        type: boolean
      web:
        type: string
      web-api:
        type: string
      web-form:
        type: string
      web-table:
        type: string
    type: object
  config.AwsS3:
    properties:
      base-url:
        type: string
      bucket:
        type: string
      disable-ssl:
        type: boolean
      endpoint:
        type: string
      path-prefix:
        type: string
      region:
        type: string
      s3-force-path-style:
        type: boolean
      secret-id:
        type: string
      secret-key:
        type: string
    type: object
  config.CORS:
    properties:
      mode:
        type: string
      whitelist:
        items:
          $ref: '#/definitions/config.CORSWhitelist'
        type: array
    type: object
  config.CORSWhitelist:
    properties:
      allow-credentials:
        type: boolean
      allow-headers:
        type: string
      allow-methods:
        type: string
      allow-origin:
        type: string
      expose-headers:
        type: string
    type: object
  config.Captcha:
    properties:
      img-height:
        description: 验证码高度
        type: integer
      img-width:
        description: 验证码宽度
        type: integer
      key-long:
        description: 验证码长度
        type: integer
      open-captcha:
        description: 防爆破验证码开启此数，0代表每次登录都需要验证码，其他数字代表错误密码此数，如3代表错误三次后出现验证码
        type: integer
      open-captcha-timeout:
        description: 防爆破验证码超时时间，单位：s(秒)
        type: integer
    type: object
  config.Detail:
    properties:
      compareField:
        description: 需要比较时间的字段
        type: string
      interval:
        description: 时间间隔
        type: string
      tableName:
        description: 需要清理的表名
        type: string
    type: object
  config.Email:
    properties:
      from:
        description: 收件人
        type: string
      host:
        description: 服务器地址
        type: string
      is-ssl:
        description: 是否SSL
        type: boolean
      nickname:
        description: 昵称
        type: string
      port:
        description: 端口
        type: integer
      secret:
        description: 密钥
        type: string
      to:
        description: 收件人:多个以英文逗号分隔
        type: string
    type: object
  config.Excel:
    properties:
      dir:
        type: string
    type: object
  config.HuaWeiObs:
    properties:
      access-key:
        type: string
      bucket:
        type: string
      endpoint:
        type: string
      path:
        type: string
      secret-key:
        type: string
    type: object
  config.JWT:
    properties:
      buffer-time:
        description: 缓冲时间
        type: string
      expires-time:
        description: 过期时间
        type: string
      issuer:
        description: 签发者
        type: string
      signing-key:
        description: jwt签名
        type: string
    type: object
  config.Local:
    properties:
      path:
        description: 本地文件访问路径
        type: string
      store-path:
        description: 本地文件存储路径
        type: string
    type: object
  config.Mssql:
    properties:
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      prefix:
        description: 全局表前缀，单独定义TableName则不生效
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Mysql:
    properties:
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      prefix:
        description: 全局表前缀，单独定义TableName则不生效
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Oracle:
    properties:
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      prefix:
        description: 全局表前缀，单独定义TableName则不生效
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Pgsql:
    properties:
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      prefix:
        description: 全局表前缀，单独定义TableName则不生效
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Qiniu:
    properties:
      access-key:
        description: 秘钥AK
        type: string
      bucket:
        description: 空间名称
        type: string
      img-path:
        description: CDN加速域名
        type: string
      secret-key:
        description: 秘钥SK
        type: string
      use-cdn-domains:
        description: 上传是否使用CDN上传加速
        type: boolean
      use-https:
        description: 是否使用https
        type: boolean
      zone:
        description: 存储区域
        type: string
    type: object
  config.Redis:
    properties:
      addr:
        description: 服务器地址:端口
        type: string
      db:
        description: redis的哪个数据库
        type: integer
      password:
        description: 密码
        type: string
      prefix:
        description: 前缀
        type: string
    type: object
  config.Server:
    properties:
      aliyun-oss:
        $ref: '#/definitions/config.AliyunOSS'
      autocode:
        $ref: '#/definitions/config.Autocode'
        description: auto
      aws-s3:
        $ref: '#/definitions/config.AwsS3'
      captcha:
        $ref: '#/definitions/config.Captcha'
      cors:
        $ref: '#/definitions/config.CORS'
        description: 跨域配置
      db-list:
        items:
          $ref: '#/definitions/config.SpecializedDB'
        type: array
      email:
        $ref: '#/definitions/config.Email'
      excel:
        $ref: '#/definitions/config.Excel'
      hua-wei-obs:
        $ref: '#/definitions/config.HuaWeiObs'
      jwt:
        $ref: '#/definitions/config.JWT'
      local:
        $ref: '#/definitions/config.Local'
        description: oss
      mssql:
        $ref: '#/definitions/config.Mssql'
      mysql:
        $ref: '#/definitions/config.Mysql'
        description: gorm
      oracle:
        $ref: '#/definitions/config.Oracle'
      pgsql:
        $ref: '#/definitions/config.Pgsql'
      qiniu:
        $ref: '#/definitions/config.Qiniu'
      redis:
        $ref: '#/definitions/config.Redis'
      system:
        $ref: '#/definitions/config.System'
      tencent-cos:
        $ref: '#/definitions/config.TencentCOS'
      timer:
        $ref: '#/definitions/config.Timer'
      zap:
        $ref: '#/definitions/config.Zap'
    type: object
  config.SpecializedDB:
    properties:
      alias-name:
        type: string
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      disable:
        type: boolean
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      prefix:
        description: 全局表前缀，单独定义TableName则不生效
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      type:
        type: string
      username:
        description: 数据库用户名
        type: string
    type: object
  config.System:
    properties:
      addr:
        description: 端口值
        type: integer
      db-type:
        description: 数据库类型:mysql(默认)|sqlite|sqlserver|postgresql
        type: string
      env:
        description: 环境值
        type: string
      iplimit-count:
        type: integer
      iplimit-time:
        type: integer
      oss-type:
        description: Oss类型
        type: string
      router-prefix:
        type: string
      use-multipoint:
        description: 多点登录拦截
        type: boolean
      use-redis:
        description: 使用redis
        type: boolean
    type: object
  config.TencentCOS:
    properties:
      base-url:
        type: string
      bucket:
        type: string
      path-prefix:
        type: string
      region:
        type: string
      secret-id:
        type: string
      secret-key:
        type: string
    type: object
  config.Timer:
    properties:
      detail:
        items:
          $ref: '#/definitions/config.Detail'
        type: array
      spec:
        description: CRON表达式
        type: string
      start:
        description: 是否启用
        type: boolean
      with_seconds:
        description: 是否精确到秒
        type: boolean
    type: object
  config.Zap:
    properties:
      director:
        description: 日志文件夹
        type: string
      encode-level:
        description: 编码级
        type: string
      format:
        description: 输出
        type: string
      level:
        description: 级别
        type: string
      log-in-console:
        description: 输出控制台
        type: boolean
      max-age:
        description: 日志留存时间
        type: integer
      prefix:
        description: 日志前缀
        type: string
      show-line:
        description: 显示行
        type: boolean
      stacktrace-key:
        description: 栈名
        type: string
    type: object
  example.ExaCustomer:
    properties:
      createdAt:
        description: 创建时间
        type: string
      customerName:
        description: 客户名
        type: string
      customerPhoneData:
        description: 客户手机号
        type: string
      id:
        description: 主键ID
        type: integer
      sysUser:
        $ref: '#/definitions/system.SysUser'
        description: 管理详情
      sysUserAuthorityID:
        description: 管理角色ID
        type: integer
      sysUserId:
        description: 管理ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  example.ExaFile:
    properties:
      chunkTotal:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      exaFileChunk:
        items:
          $ref: '#/definitions/example.ExaFileChunk'
        type: array
      fileMd5:
        type: string
      fileName:
        type: string
      filePath:
        type: string
      id:
        description: 主键ID
        type: integer
      isFinish:
        type: boolean
      updatedAt:
        description: 更新时间
        type: string
    type: object
  example.ExaFileChunk:
    properties:
      createdAt:
        description: 创建时间
        type: string
      exaFileID:
        type: integer
      fileChunkNumber:
        type: integer
      fileChunkPath:
        type: string
      id:
        description: 主键ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  example.ExaFileUploadAndDownload:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      key:
        description: 编号
        type: string
      name:
        description: 文件名
        type: string
      tag:
        description: 文件标签
        type: string
      updatedAt:
        description: 更新时间
        type: string
      url:
        description: 文件地址
        type: string
    type: object
  request.AddMenuAuthorityInfo:
    properties:
      authorityId:
        description: 角色ID
        type: integer
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
    type: object
  request.CasbinInReceive:
    properties:
      authorityId:
        description: 权限id
        type: integer
      casbinInfos:
        items:
          $ref: '#/definitions/request.CasbinInfo'
        type: array
    type: object
  request.CasbinInfo:
    properties:
      method:
        description: 方法
        type: string
      path:
        description: 路径
        type: string
    type: object
  request.ChangePasswordReq:
    properties:
      newPassword:
        description: 新密码
        type: string
      password:
        description: 密码
        type: string
    type: object
  request.Empty:
    type: object
  request.GetAuthorityId:
    properties:
      authorityId:
        description: 角色ID
        type: integer
    type: object
  request.GetById:
    properties:
      id:
        description: 主键ID
        type: integer
    type: object
  request.IdsReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  request.InitDB:
    properties:
      dbName:
        description: 数据库名
        type: string
      dbType:
        description: 数据库类型
        type: string
      host:
        description: 服务器地址
        type: string
      password:
        description: 数据库密码
        type: string
      port:
        description: 数据库连接端口
        type: string
      userName:
        description: 数据库用户名
        type: string
    required:
    - dbName
    - userName
    type: object
  request.Login:
    properties:
      captcha:
        description: 验证码
        type: string
      captchaId:
        description: 验证码ID
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.PageInfo:
    properties:
      keyword:
        description: 关键字
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
    type: object
  request.Register:
    properties:
      authorityId:
        example: int 角色id
        type: string
      authorityIds:
        example: '[]uint 角色id'
        type: string
      email:
        example: 电子邮箱
        type: string
      enable:
        example: int 是否启用
        type: string
      headerImg:
        example: 头像链接
        type: string
      nickName:
        example: 昵称
        type: string
      passWord:
        example: 密码
        type: string
      phone:
        example: 电话号码
        type: string
      userName:
        example: 用户名
        type: string
    type: object
  request.RollBack:
    properties:
      deleteTable:
        description: 是否删除表
        type: boolean
      id:
        description: 主键ID
        type: integer
    type: object
  request.SearchApiParams:
    properties:
      apiGroup:
        description: api组
        type: string
      createdAt:
        description: 创建时间
        type: string
      desc:
        description: 排序方式:升序false(默认)|降序true
        type: boolean
      description:
        description: api中文描述
        type: string
      id:
        description: 主键ID
        type: integer
      keyword:
        description: 关键字
        type: string
      method:
        description: 方法:创建POST(默认)|查看GET|更新PUT|删除DELETE
        type: string
      orderKey:
        description: 排序
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      path:
        description: api路径
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  request.SetUserAuth:
    properties:
      authorityId:
        description: 角色ID
        type: integer
    type: object
  request.SetUserAuthorities:
    properties:
      authorityIds:
        description: 角色ID
        items:
          type: integer
        type: array
      id:
        type: integer
    type: object
  request.SysAuthorityBtnReq:
    properties:
      authorityId:
        type: integer
      menuID:
        type: integer
      selected:
        items:
          type: integer
        type: array
    type: object
  request.SysAutoHistory:
    properties:
      keyword:
        description: 关键字
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
    type: object
  response.Email:
    properties:
      body:
        description: 邮件内容
        type: string
      subject:
        description: 邮件标题
        type: string
      to:
        description: 邮件发送给谁
        type: string
    type: object
  response.ExaCustomerResponse:
    properties:
      customer:
        $ref: '#/definitions/example.ExaCustomer'
    type: object
  response.ExaFileResponse:
    properties:
      file:
        $ref: '#/definitions/example.ExaFileUploadAndDownload'
    type: object
  response.FilePathResponse:
    properties:
      filePath:
        type: string
    type: object
  response.FileResponse:
    properties:
      file:
        $ref: '#/definitions/example.ExaFile'
    type: object
  response.LoginResponse:
    properties:
      expiresAt:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/system.SysUser'
    type: object
  response.PageResult:
    properties:
      list:
        type: object
      page:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  response.PolicyPathResponse:
    properties:
      paths:
        items:
          $ref: '#/definitions/request.CasbinInfo'
        type: array
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  response.SysAPIListResponse:
    properties:
      apis:
        items:
          $ref: '#/definitions/system.SysApi'
        type: array
    type: object
  response.SysAPIResponse:
    properties:
      api:
        $ref: '#/definitions/system.SysApi'
    type: object
  response.SysAuthorityBtnRes:
    properties:
      selected:
        items:
          type: integer
        type: array
    type: object
  response.SysAuthorityCopyResponse:
    properties:
      authority:
        $ref: '#/definitions/system.SysAuthority'
      oldAuthorityId:
        description: 旧角色ID
        type: integer
    type: object
  response.SysAuthorityResponse:
    properties:
      authority:
        $ref: '#/definitions/system.SysAuthority'
    type: object
  response.SysBaseMenuResponse:
    properties:
      menu:
        $ref: '#/definitions/system.SysBaseMenu'
    type: object
  response.SysBaseMenusResponse:
    properties:
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
    type: object
  response.SysCaptchaResponse:
    properties:
      captchaId:
        type: string
      captchaLength:
        type: integer
      openCaptcha:
        type: boolean
      picPath:
        type: string
    type: object
  response.SysConfigResponse:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
  response.SysMenusResponse:
    properties:
      menus:
        items:
          $ref: '#/definitions/system.SysMenu'
        type: array
    type: object
  response.SysUserResponse:
    properties:
      user:
        $ref: '#/definitions/system.SysUser'
    type: object
  system.AutoCodeStruct:
    properties:
      abbreviation:
        description: Struct简称
        type: string
      autoCreateApiToSql:
        description: 是否自动创建api
        type: boolean
      autoCreateResource:
        description: 是否自动创建资源标识
        type: boolean
      autoMoveFile:
        description: 是否自动移动文件
        type: boolean
      businessDB:
        description: 业务数据库
        type: string
      description:
        description: Struct中文名称
        type: string
      fields:
        items:
          $ref: '#/definitions/system.Field'
        type: array
      hasTimer:
        type: boolean
      humpPackageName:
        description: go文件名称
        type: string
      package:
        type: string
      packageName:
        description: 文件名称
        type: string
      structName:
        description: Struct名称
        type: string
      tableName:
        description: 表名
        type: string
    type: object
  system.Field:
    properties:
      clearable:
        description: 是否可清空
        type: boolean
      columnName:
        description: 数据库字段
        type: string
      comment:
        description: 数据库字段描述
        type: string
      dataTypeLong:
        description: 数据库字段长度
        type: string
      dictType:
        description: 字典
        type: string
      errorText:
        description: 校验失败文字
        type: string
      fieldDesc:
        description: 中文名
        type: string
      fieldJson:
        description: FieldJson
        type: string
      fieldName:
        description: Field名
        type: string
      fieldSearchType:
        description: 搜索条件
        type: string
      fieldType:
        description: Field数据类型
        type: string
      require:
        description: 是否必填
        type: boolean
      sort:
        description: 是否增加排序
        type: boolean
    type: object
  system.SysApi:
    properties:
      apiGroup:
        description: api组
        type: string
      createdAt:
        description: 创建时间
        type: string
      description:
        description: api中文描述
        type: string
      id:
        description: 主键ID
        type: integer
      method:
        description: 方法:创建POST(默认)|查看GET|更新PUT|删除DELETE
        type: string
      path:
        description: api路径
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysAuthority:
    properties:
      authorityId:
        description: 角色ID
        type: integer
      authorityName:
        description: 角色名
        type: string
      children:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      createdAt:
        description: 创建时间
        type: string
      dataAuthorityId:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      defaultRouter:
        description: 默认菜单(默认dashboard)
        type: string
      deletedAt:
        type: string
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      parentId:
        description: 父角色ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysAutoCode:
    properties:
      createdAt:
        description: 创建时间
        type: string
      desc:
        type: string
      id:
        description: 主键ID
        type: integer
      label:
        type: string
      packageName:
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenu:
    properties:
      activeName:
        type: string
      authoritys:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      children:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      closeTab:
        description: 自动关闭tab
        type: boolean
      component:
        description: 对应前端文件路径
        type: string
      createdAt:
        description: 创建时间
        type: string
      defaultMenu:
        description: 是否是基础路由（开发中）
        type: boolean
      hidden:
        description: 是否在列表隐藏
        type: boolean
      icon:
        description: 菜单图标
        type: string
      id:
        description: 主键ID
        type: integer
      keepAlive:
        description: 是否缓存
        type: boolean
      menuBtn:
        items:
          $ref: '#/definitions/system.SysBaseMenuBtn'
        type: array
      name:
        description: 路由name
        type: string
      parameters:
        items:
          $ref: '#/definitions/system.SysBaseMenuParameter'
        type: array
      parentId:
        description: 父菜单ID
        type: string
      path:
        description: 路由path
        type: string
      sort:
        description: 排序标记
        type: integer
      title:
        description: 菜单名
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenuBtn:
    properties:
      createdAt:
        description: 创建时间
        type: string
      desc:
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        type: string
      sysBaseMenuID:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenuParameter:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      key:
        description: 地址栏携带参数的key
        type: string
      sysBaseMenuID:
        type: integer
      type:
        description: 地址栏携带参数为params还是query
        type: string
      updatedAt:
        description: 更新时间
        type: string
      value:
        description: 地址栏携带参数的值
        type: string
    type: object
  system.SysDictionary:
    properties:
      createdAt:
        description: 创建时间
        type: string
      desc:
        description: 描述
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        description: 字典名（中）
        type: string
      status:
        description: 状态
        type: boolean
      sysDictionaryDetails:
        items:
          $ref: '#/definitions/system.SysDictionaryDetail'
        type: array
      type:
        description: 字典名（英）
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysDictionaryDetail:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      label:
        description: 展示值
        type: string
      sort:
        description: 排序标记
        type: integer
      status:
        description: 启用状态
        type: boolean
      sysDictionaryID:
        description: 关联标记
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      value:
        description: 字典值
        type: integer
    type: object
  system.SysMenu:
    properties:
      activeName:
        type: string
      authoritys:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      btns:
        additionalProperties:
          type: integer
        type: object
      children:
        items:
          $ref: '#/definitions/system.SysMenu'
        type: array
      closeTab:
        description: 自动关闭tab
        type: boolean
      component:
        description: 对应前端文件路径
        type: string
      createdAt:
        description: 创建时间
        type: string
      defaultMenu:
        description: 是否是基础路由（开发中）
        type: boolean
      hidden:
        description: 是否在列表隐藏
        type: boolean
      icon:
        description: 菜单图标
        type: string
      id:
        description: 主键ID
        type: integer
      keepAlive:
        description: 是否缓存
        type: boolean
      menuBtn:
        items:
          $ref: '#/definitions/system.SysBaseMenuBtn'
        type: array
      menuId:
        type: string
      name:
        description: 路由name
        type: string
      parameters:
        items:
          $ref: '#/definitions/system.SysBaseMenuParameter'
        type: array
      parentId:
        description: 父菜单ID
        type: string
      path:
        description: 路由path
        type: string
      sort:
        description: 排序标记
        type: integer
      title:
        description: 菜单名
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysOperationRecord:
    properties:
      agent:
        description: 代理
        type: string
      body:
        description: 请求Body
        type: string
      createdAt:
        description: 创建时间
        type: string
      error_message:
        description: 错误信息
        type: string
      id:
        description: 主键ID
        type: integer
      ip:
        description: 请求ip
        type: string
      latency:
        description: 延迟
        type: string
      method:
        description: 请求方法
        type: string
      path:
        description: 请求路径
        type: string
      resp:
        description: 响应Body
        type: string
      status:
        description: 请求状态
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      user:
        $ref: '#/definitions/system.SysUser'
      user_id:
        description: 用户id
        type: integer
    type: object
  system.SysUser:
    properties:
      activeColor:
        description: 活跃颜色
        type: string
      authorities:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      authority:
        $ref: '#/definitions/system.SysAuthority'
      authorityId:
        description: 用户角色ID
        type: integer
      baseColor:
        description: 基础颜色
        type: string
      createdAt:
        description: 创建时间
        type: string
      email:
        description: 用户邮箱
        type: string
      enable:
        description: 用户是否被冻结 1正常 2冻结
        type: integer
      headerImg:
        description: 用户头像
        type: string
      id:
        description: 主键ID
        type: integer
      nickName:
        description: 用户昵称
        type: string
      phone:
        description: 用户手机号
        type: string
      sideMode:
        description: 用户侧边主题
        type: string
      updatedAt:
        description: 更新时间
        type: string
      userName:
        description: 用户登录名
        type: string
      uuid:
        description: 用户UUID
        type: string
    type: object
  system.System:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
info:
  contact: {}
  description: This is a sample Server pets
  title: Swagger Example API
  version: 0.0.1
paths:
  /api/createApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: 创建基础api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建基础api
      tags:
      - SysApi
  /api/deleteApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: 删除api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除api
      tags:
      - SysApi
  /api/deleteApisByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 删除选中Api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除选中Api
      tags:
      - SysApi
  /api/getAllApis:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取所有的Api 不分页,返回包括api列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAPIListResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取所有的Api 不分页
      tags:
      - SysApi
  /api/getApiById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 根据id获取api
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 根据id获取api,返回包括api详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAPIResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 根据id获取api
      tags:
      - SysApi
  /api/getApiList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取API列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SearchApiParams'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取API列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取API列表
      tags:
      - SysApi
  /api/updateApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: 修改基础api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 修改基础api
      tags:
      - SysApi
  /appRole/createAppRole:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建AppRole
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.AppRole'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建AppRole
      tags:
      - AppRole
  /appRole/deleteAppRole:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除AppRole
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.AppRole'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除AppRole
      tags:
      - AppRole
  /appRole/deleteAppRoleByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除AppRole
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除AppRole
      tags:
      - AppRole
  /appRole/findAppRole:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询AppRole
      tags:
      - AppRole
  /appRole/getAppRoleList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取AppRole列表
      tags:
      - AppRole
  /appRole/updateAppRole:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新AppRole
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.AppRole'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新AppRole
      tags:
      - AppRole
  /appUser/checkExist:
    get:
      consumes:
      - application/json
      parameters:
      - description: 检测内容
        in: query
        name: content
        type: string
      - description: 1:用户名；2：手机号
        in: query
        name: type
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 检测用户名或手机号存在
      tags:
      - AppUser
  /appUser/getUserInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户详情
      tags:
      - AppUser
  /appUser/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 密码
        in: query
        name: password
        type: string
      - description: 用户名
        in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 登录
      tags:
      - AppUser
  /appUser/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: 确认密码
        in: query
        name: confirmPassword
        type: string
      - description: 密码
        in: query
        name: password
        type: string
      - description: 手机号
        in: query
        name: phoneNum
        type: string
      - description: 用户名
        in: query
        name: username
        type: string
      - description: 验证码
        in: query
        name: verifyCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"msg":"创建成功"}'
          schema:
            type: string
      summary: 注册
      tags:
      - AppUser
  /authority/copyAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 旧角色id, 新权限id, 新权限名, 新父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.SysAuthorityCopyResponse'
      produces:
      - application/json
      responses:
        "200":
          description: 拷贝角色,返回包括系统角色详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 拷贝角色
      tags:
      - Authority
  /authority/createAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: 创建角色,返回包括系统角色详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - Authority
  /authority/deleteAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: 删除角色
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - Authority
  /authority/getAuthorityList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取角色列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取角色列表
      tags:
      - Authority
  /authority/setDataAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设置角色资源权限
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: 设置角色资源权限
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置角色资源权限
      tags:
      - Authority
  /authority/updateAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: 更新角色信息,返回包括系统角色详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
      tags:
      - Authority
  /authorityBtn/canRemoveAuthorityBtn:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置权限按钮
      tags:
      - AuthorityBtn
  /authorityBtn/getAuthorityBtn:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id, 角色id, 选中的按钮id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysAuthorityBtnReq'
      produces:
      - application/json
      responses:
        "200":
          description: 返回列表成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityBtnRes'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取权限按钮
      tags:
      - AuthorityBtn
  /authorityBtn/setAuthorityBtn:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id, 角色id, 选中的按钮id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysAuthorityBtnReq'
      produces:
      - application/json
      responses:
        "200":
          description: 返回列表成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置权限按钮
      tags:
      - AuthorityBtn
  /autoCode/createPackage:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建package
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAutoCode'
      produces:
      - application/json
      responses:
        "200":
          description: 创建package成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建package
      tags:
      - AutoCode
  /autoCode/createPlug:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: this is a test file
        in: formData
        name: plug
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 安装插件成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    type: object
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 安装插件
      tags:
      - AutoCode
  /autoCode/createTemp:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建自动代码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.AutoCodeStruct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 自动代码模板
      tags:
      - AutoCode
  /autoCode/delPackage:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建package
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAutoCode'
      produces:
      - application/json
      responses:
        "200":
          description: 删除package成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除package
      tags:
      - AutoCode
  /autoCode/delSysHistory:
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 删除回滚记录
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除回滚记录
      tags:
      - AutoCode
  /autoCode/getColumn:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取当前表所有字段
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取当前表所有字段
      tags:
      - AutoCode
  /autoCode/getDatabase:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取当前所有数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取当前所有数据库
      tags:
      - AutoCode
  /autoCode/getMeta:
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 获取meta信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取meta信息
      tags:
      - AutoCode
  /autoCode/getPackage:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 创建package成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取package
      tags:
      - AutoCode
  /autoCode/getSysHistory:
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysAutoHistory'
      produces:
      - application/json
      responses:
        "200":
          description: 查询回滚记录,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 查询回滚记录
      tags:
      - AutoCode
  /autoCode/getTables:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取当前数据库所有表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取当前数据库所有表
      tags:
      - AutoCode
  /autoCode/preview:
    post:
      consumes:
      - application/json
      parameters:
      - description: 预览创建代码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.AutoCodeStruct'
      produces:
      - application/json
      responses:
        "200":
          description: 预览创建后的代码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 预览创建后的代码
      tags:
      - AutoCode
  /autoCode/rollback:
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RollBack'
      produces:
      - application/json
      responses:
        "200":
          description: 回滚自动生成代码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 回滚自动生成代码
      tags:
      - AutoCode
  /banner/createBanner:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建Banner
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Banner'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建Banner
      tags:
      - Banner
  /banner/deleteBanner:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除Banner
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Banner'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除Banner
      tags:
      - Banner
  /banner/deleteBannerByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除Banner
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除Banner
      tags:
      - Banner
  /banner/findBanner:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: content
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: mediaUrl
        type: string
      - in: query
        name: sort
        type: integer
      - in: query
        name: status
        type: integer
      - in: query
        name: title
        type: string
      - in: query
        name: type
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: url
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询Banner
      tags:
      - Banner
  /banner/getBannerList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: content
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - in: query
        name: mediaUrl
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: sort
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - in: query
        name: status
        type: integer
      - in: query
        name: title
        type: string
      - in: query
        name: type
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: url
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取Banner列表
      tags:
      - Banner
  /banner/updateBanner:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新Banner
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Banner'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新Banner
      tags:
      - Banner
  /base/captcha:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 生成验证码,返回包括随机数id,base64,验证码长度,是否开启验证码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysCaptchaResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 生成验证码
      tags:
      - Base
  /base/login:
    post:
      parameters:
      - description: 用户名, 密码, 验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: 返回包括用户信息,token,过期时间
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.LoginResponse'
                msg:
                  type: string
              type: object
      summary: 用户登录
      tags:
      - Base
  /casbin/UpdateCasbin:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限模型列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: 更新角色api权限
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新角色api权限
      tags:
      - Casbin
  /casbin/getPolicyPathByAuthorityId:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限模型列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: 获取权限列表,返回包括casbin详情列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PolicyPathResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取权限列表
      tags:
      - Casbin
  /cloth/createCloth:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建Cloth
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Cloth'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建Cloth
      tags:
      - Cloth
  /cloth/deleteCloth:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除Cloth
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Cloth'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除Cloth
      tags:
      - Cloth
  /cloth/deleteClothByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除Cloth
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除Cloth
      tags:
      - Cloth
  /cloth/findCloth:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: color
        type: string
      - in: query
        name: companyID
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: length
        type: number
      - in: query
        name: styleID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询Cloth
      tags:
      - Cloth
  /cloth/getClothList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: color
        type: string
      - in: query
        name: companyID
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - in: query
        name: length
        type: number
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - in: query
        name: styleID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取Cloth列表
      tags:
      - Cloth
  /cloth/updateCloth:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新Cloth
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Cloth'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新Cloth
      tags:
      - Cloth
  /company/createCompany:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建Company
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Company'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建Company
      tags:
      - Company
  /company/deleteCompany:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除Company
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Company'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除Company
      tags:
      - Company
  /company/deleteCompanyByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除Company
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除Company
      tags:
      - Company
  /company/findCompany:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: status
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询Company
      tags:
      - Company
  /company/getCompanyList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - in: query
        name: status
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取Company列表
      tags:
      - Company
  /company/updateCompany:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新Company
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Company'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新Company
      tags:
      - Company
  /croppingRecord/createCroppingRecord:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建CroppingRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.CroppingRecord'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建CroppingRecord
      tags:
      - CroppingRecord
  /croppingRecord/deleteCroppingRecord:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除CroppingRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.CroppingRecord'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除CroppingRecord
      tags:
      - CroppingRecord
  /croppingRecord/deleteCroppingRecordByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除CroppingRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除CroppingRecord
      tags:
      - CroppingRecord
  /croppingRecord/findCroppingRecord:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: color
        type: string
      - in: query
        name: companyID
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: length
        type: number
      - in: query
        name: quantity
        type: integer
      - in: query
        name: size
        type: string
      - in: query
        name: step
        type: integer
      - in: query
        name: styleID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询CroppingRecord
      tags:
      - CroppingRecord
  /croppingRecord/getCroppingRecordList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: color
        type: string
      - in: query
        name: companyID
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - in: query
        name: length
        type: number
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: quantity
        type: integer
      - in: query
        name: size
        type: string
      - in: query
        name: startCreatedAt
        type: string
      - in: query
        name: step
        type: integer
      - in: query
        name: styleID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取CroppingRecord列表
      tags:
      - CroppingRecord
  /croppingRecord/updateCroppingRecord:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新CroppingRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.CroppingRecord'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新CroppingRecord
      tags:
      - CroppingRecord
  /customer/customer:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 客户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: 删除客户
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除客户
      tags:
      - ExaCustomer
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 客户名
        in: query
        name: customerName
        type: string
      - description: 客户手机号
        in: query
        name: customerPhoneData
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 管理角色ID
        in: query
        name: sysUserAuthorityID
        type: integer
      - description: 管理ID
        in: query
        name: sysUserId
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取单一客户信息,返回包括客户详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ExaCustomerResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取单一客户信息
      tags:
      - ExaCustomer
    post:
      consumes:
      - application/json
      parameters:
      - description: 客户用户名, 客户手机号码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: 创建客户
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建客户
      tags:
      - ExaCustomer
    put:
      consumes:
      - application/json
      parameters:
      - description: 客户ID, 客户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: 更新客户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新客户信息
      tags:
      - ExaCustomer
  /customer/customerList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取权限客户列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取权限客户列表
      tags:
      - ExaCustomer
  /email/emailTest:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"发送成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 发送测试邮件
      tags:
      - System
  /email/sendEmail:
    post:
      parameters:
      - description: 发送邮件必须的参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.Email'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"发送成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 发送邮件
      tags:
      - System
  /fileUploadAndDownload/breakpointContinue:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: an example for breakpoint resume, 断点续传示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 断点续传到服务器
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 断点续传到服务器
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/deleteFile:
    post:
      parameters:
      - description: 传入文件里面id即可
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaFileUploadAndDownload'
      produces:
      - application/json
      responses:
        "200":
          description: 删除文件
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/findFile:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件完成
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 创建文件,返回包括文件路径
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.FilePathResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/getFileList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页文件列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页文件列表
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/removeChunk:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 删除缓存切片
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 删除切片
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除切片
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传文件示例,返回包括文件详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ExaFileResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 上传文件示例
      tags:
      - ExaFileUploadAndDownload
  /init/checkdb:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 初始化用户数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      summary: 初始化用户数据库
      tags:
      - CheckDB
  /init/initdb:
    post:
      parameters:
      - description: 初始化数据库参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.InitDB'
      produces:
      - application/json
      responses:
        "200":
          description: 初始化用户数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 初始化用户数据库
      tags:
      - InitDB
  /job/createJob:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建Job
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Job'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建Job
      tags:
      - Job
  /job/deleteJob:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除Job
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Job'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除Job
      tags:
      - Job
  /job/deleteJobByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除Job
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除Job
      tags:
      - Job
  /job/findJob:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: croppingID
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: income
        type: number
      - in: query
        name: jobType
        type: integer
      - in: query
        name: price
        type: number
      - in: query
        name: processName
        type: string
      - in: query
        name: quantity
        type: integer
      - in: query
        name: realIncome
        type: number
      - in: query
        name: realQuantity
        type: integer
      - in: query
        name: step
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询Job
      tags:
      - Job
  /job/getJobList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: croppingID
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: income
        type: number
      - in: query
        name: jobType
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: price
        type: number
      - in: query
        name: processName
        type: string
      - in: query
        name: quantity
        type: integer
      - in: query
        name: realIncome
        type: number
      - in: query
        name: realQuantity
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - in: query
        name: step
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取Job列表
      tags:
      - Job
  /job/updateJob:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新Job
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Job'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新Job
      tags:
      - Job
  /jobQuestion/createJobQuestion:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建JobQuestion
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.JobQuestion'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建JobQuestion
      tags:
      - JobQuestion
  /jobQuestion/deleteJobQuestion:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除JobQuestion
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.JobQuestion'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除JobQuestion
      tags:
      - JobQuestion
  /jobQuestion/deleteJobQuestionByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除JobQuestion
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除JobQuestion
      tags:
      - JobQuestion
  /jobQuestion/findJobQuestion:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: content
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: jobID
        type: integer
      - in: query
        name: status
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询JobQuestion
      tags:
      - JobQuestion
  /jobQuestion/getJobQuestionList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: content
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: jobID
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - in: query
        name: status
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取JobQuestion列表
      tags:
      - JobQuestion
  /jobQuestion/updateJobQuestion:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新JobQuestion
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.JobQuestion'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新JobQuestion
      tags:
      - JobQuestion
  /jwt/jsonInBlacklist:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: jwt加入黑名单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: jwt加入黑名单
      tags:
      - Jwt
  /menu/addBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: 新增菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 新增菜单
      tags:
      - Menu
  /menu/addMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddMenuAuthorityInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 增加menu和角色关联关系
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 增加menu和角色关联关系
      tags:
      - AuthorityMenu
  /menu/deleteBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 删除菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除菜单
      tags:
      - Menu
  /menu/getBaseMenuById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 根据id获取菜单,返回包括系统菜单列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysBaseMenuResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 根据id获取菜单
      tags:
      - Menu
  /menu/getBaseMenuTree:
    post:
      parameters:
      - description: 空
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户动态路由,返回包括系统菜单列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysBaseMenusResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenu:
    post:
      parameters:
      - description: 空
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户动态路由,返回包括系统菜单详情列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysMenusResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAuthorityId'
      produces:
      - application/json
      responses:
        "200":
          description: 获取指定角色menu
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取指定角色menu
      tags:
      - AuthorityMenu
  /menu/getMenuList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取基础menu列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取基础menu列表
      tags:
      - Menu
  /menu/updateBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: 更新菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新菜单
      tags:
      - Menu
  /msgBox/createMsgBox:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建MsgBox
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.MsgBox'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建MsgBox
      tags:
      - MsgBox
  /msgBox/deleteMsgBox:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除MsgBox
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.MsgBox'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除MsgBox
      tags:
      - MsgBox
  /msgBox/deleteMsgBoxByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除MsgBox
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除MsgBox
      tags:
      - MsgBox
  /msgBox/findMsgBox:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: msgID
        type: integer
      - in: query
        name: msgType
        type: integer
      - in: query
        name: status
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询MsgBox
      tags:
      - MsgBox
  /msgBox/getMsgBoxList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - in: query
        name: msgID
        type: integer
      - in: query
        name: msgType
        type: integer
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - in: query
        name: status
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取MsgBox列表
      tags:
      - MsgBox
  /msgBox/updateMsgBox:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新MsgBox
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.MsgBox'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新MsgBox
      tags:
      - MsgBox
  /process/createProcess:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建Process
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Process'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建Process
      tags:
      - Process
  /process/deleteProcess:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除Process
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Process'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除Process
      tags:
      - Process
  /process/deleteProcessByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除Process
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除Process
      tags:
      - Process
  /process/findProcess:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: percent
        type: number
      - in: query
        name: price
        type: number
      - in: query
        name: sort
        type: integer
      - in: query
        name: styleID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询Process
      tags:
      - Process
  /process/getProcessList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: percent
        type: number
      - in: query
        name: price
        type: number
      - in: query
        name: sort
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - in: query
        name: styleID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取Process列表
      tags:
      - Process
  /process/updateProcess:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新Process
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Process'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新Process
      tags:
      - Process
  /style/createStyle:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建Style
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Style'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建Style
      tags:
      - Style
  /style/deleteStyle:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除Style
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Style'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除Style
      tags:
      - Style
  /style/deleteStyleByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除Style
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除Style
      tags:
      - Style
  /style/findStyle:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyID
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: price
        type: number
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询Style
      tags:
      - Style
  /style/getStyleList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyID
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: price
        type: number
      - in: query
        name: startCreatedAt
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取Style列表
      tags:
      - Style
  /style/updateStyle:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新Style
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Style'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新Style
      tags:
      - Style
  /sysDictionary/createSysDictionary:
    post:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: 创建SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/deleteSysDictionary:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: 删除SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/findSysDictionary:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 描述
        in: query
        name: desc
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 字典名（中）
        in: query
        name: name
        type: string
      - description: 状态
        in: query
        name: status
        type: boolean
      - description: 字典名（英）
        in: query
        name: type
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 用id查询SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/getSysDictionaryList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 描述
        in: query
        name: desc
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 字典名（中）
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 状态
        in: query
        name: status
        type: boolean
      - description: 字典名（英）
        in: query
        name: type
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取SysDictionary列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取SysDictionary列表
      tags:
      - SysDictionary
  /sysDictionary/updateSysDictionary:
    put:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: 更新SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新SysDictionary
      tags:
      - SysDictionary
  /sysDictionaryDetail/createSysDictionaryDetail:
    post:
      consumes:
      - application/json
      parameters:
      - description: SysDictionaryDetail模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: 创建SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/deleteSysDictionaryDetail:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysDictionaryDetail模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: 删除SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/findSysDictionaryDetail:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 展示值
        in: query
        name: label
        type: string
      - description: 排序标记
        in: query
        name: sort
        type: integer
      - description: 启用状态
        in: query
        name: status
        type: boolean
      - description: 关联标记
        in: query
        name: sysDictionaryID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 字典值
        in: query
        name: value
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用id查询SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/getSysDictionaryDetailList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 展示值
        in: query
        name: label
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 排序标记
        in: query
        name: sort
        type: integer
      - description: 启用状态
        in: query
        name: status
        type: boolean
      - description: 关联标记
        in: query
        name: sysDictionaryID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 字典值
        in: query
        name: value
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取SysDictionaryDetail列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取SysDictionaryDetail列表
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/updateSysDictionaryDetail:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新SysDictionaryDetail
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: 更新SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysOperationRecord/createSysOperationRecord:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建SysOperationRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: 创建SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/deleteSysOperationRecord:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysOperationRecord模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: 删除SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/deleteSysOperationRecordByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除SysOperationRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 批量删除SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 批量删除SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/findSysOperationRecord:
    get:
      consumes:
      - application/json
      parameters:
      - description: 代理
        in: query
        name: agent
        type: string
      - description: 请求Body
        in: query
        name: body
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 错误信息
        in: query
        name: error_message
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 请求ip
        in: query
        name: ip
        type: string
      - description: 延迟
        in: query
        name: latency
        type: string
      - description: 请求方法
        in: query
        name: method
        type: string
      - description: 请求路径
        in: query
        name: path
        type: string
      - description: 响应Body
        in: query
        name: resp
        type: string
      - description: 请求状态
        in: query
        name: status
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 用户id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用id查询SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/getSysOperationRecordList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 代理
        in: query
        name: agent
        type: string
      - description: 请求Body
        in: query
        name: body
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 错误信息
        in: query
        name: error_message
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 请求ip
        in: query
        name: ip
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 延迟
        in: query
        name: latency
        type: string
      - description: 请求方法
        in: query
        name: method
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 请求路径
        in: query
        name: path
        type: string
      - description: 响应Body
        in: query
        name: resp
        type: string
      - description: 请求状态
        in: query
        name: status
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 用户id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取SysOperationRecord列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取SysOperationRecord列表
      tags:
      - SysOperationRecord
  /system/getServerInfo:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 获取服务器信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取服务器信息
      tags:
      - System
  /system/getSystemConfig:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 获取配置文件内容,返回包括系统配置
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysConfigResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取配置文件内容
      tags:
      - System
  /system/reloadSystem:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 重启系统
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 重启系统
      tags:
      - System
  /system/setSystemConfig:
    post:
      parameters:
      - description: 设置配置文件内容
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.System'
      produces:
      - application/json
      responses:
        "200":
          description: 设置配置文件内容
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置配置文件内容
      tags:
      - System
  /team/createTeam:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建Team
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Team'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建Team
      tags:
      - Team
  /team/deleteTeam:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除Team
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Team'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除Team
      tags:
      - Team
  /team/deleteTeamByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除Team
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除Team
      tags:
      - Team
  /team/findTeam:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyID
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询Team
      tags:
      - Team
  /team/getTeamList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyID
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取Team列表
      tags:
      - Team
  /team/updateTeam:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新Team
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.Team'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新Team
      tags:
      - Team
  /teamApply/createTeamApply:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建TeamApply
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.TeamApply'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建TeamApply
      tags:
      - TeamApply
  /teamApply/deleteTeamApply:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除TeamApply
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.TeamApply'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除TeamApply
      tags:
      - TeamApply
  /teamApply/deleteTeamApplyByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除TeamApply
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除TeamApply
      tags:
      - TeamApply
  /teamApply/findTeamApply:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: status
        type: integer
      - in: query
        name: teamID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询TeamApply
      tags:
      - TeamApply
  /teamApply/getTeamApplyList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - in: query
        name: status
        type: integer
      - in: query
        name: teamID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取TeamApply列表
      tags:
      - TeamApply
  /teamApply/updateTeamApply:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新TeamApply
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.TeamApply'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新TeamApply
      tags:
      - TeamApply
  /teamUser/createTeamUser:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建TeamUser
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.TeamUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建TeamUser
      tags:
      - TeamUser
  /teamUser/deleteTeamUser:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除TeamUser
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.TeamUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除TeamUser
      tags:
      - TeamUser
  /teamUser/deleteTeamUserByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除TeamUser
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除TeamUser
      tags:
      - TeamUser
  /teamUser/findTeamUser:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: teamID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询TeamUser
      tags:
      - TeamUser
  /teamUser/getTeamUserList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - in: query
        name: teamID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取TeamUser列表
      tags:
      - TeamUser
  /teamUser/updateTeamUser:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新TeamUser
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.TeamUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新TeamUser
      tags:
      - TeamUser
  /user/SetSelfInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
  /user/admin_register:
    post:
      parameters:
      - description: 用户名, 昵称, 密码, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: 用户注册账号,返回包括用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysUserResponse'
                msg:
                  type: string
              type: object
      summary: 用户注册账号
      tags:
      - SysUser
  /user/changePassword:
    post:
      parameters:
      - description: 用户名, 原密码, 新密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: 用户修改密码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用户修改密码
      tags:
      - SysUser
  /user/deleteUser:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 用户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 删除用户
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - SysUser
  /user/getUserInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - SysUser
  /user/getUserList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取用户列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户列表
      tags:
      - SysUser
  /user/resetPassword:
    post:
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: 重置用户密码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 重置用户密码
      tags:
      - SysUser
  /user/setUserAuthorities:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户UUID, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuthorities'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户权限
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置用户权限
      tags:
      - SysUser
  /user/setUserAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户UUID, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户权限
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更改用户权限
      tags:
      - SysUser
  /user/setUserInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
  /userRole/createUserRole:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建UserRole
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.UserRole'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建UserRole
      tags:
      - UserRole
  /userRole/deleteUserRole:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除UserRole
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.UserRole'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除UserRole
      tags:
      - UserRole
  /userRole/deleteUserRoleByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除UserRole
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除UserRole
      tags:
      - UserRole
  /userRole/findUserRole:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyID
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: roleID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询UserRole
      tags:
      - UserRole
  /userRole/getUserRoleList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyID
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: roleID
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取UserRole列表
      tags:
      - UserRole
  /userRole/updateUserRole:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新UserRole
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.UserRole'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新UserRole
      tags:
      - UserRole
  /userWallet/createUserWallet:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建UserWallet
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.UserWallet'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建UserWallet
      tags:
      - UserWallet
  /userWallet/deleteUserWallet:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除UserWallet
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.UserWallet'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除UserWallet
      tags:
      - UserWallet
  /userWallet/deleteUserWalletByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除UserWallet
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除UserWallet
      tags:
      - UserWallet
  /userWallet/findUserWallet:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyID
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      - in: query
        name: wages
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询UserWallet
      tags:
      - UserWallet
  /userWallet/getUserWalletList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyID
        type: integer
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: createdBy
        type: integer
      - in: query
        name: deletedBy
        type: integer
      - in: query
        name: endCreatedAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: startCreatedAt
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: updatedBy
        type: integer
      - in: query
        name: userID
        type: integer
      - in: query
        name: wages
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取UserWallet列表
      tags:
      - UserWallet
  /userWallet/updateUserWallet:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新UserWallet
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/clothing.UserWallet'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新UserWallet
      tags:
      - UserWallet
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
